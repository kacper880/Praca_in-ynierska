Rozdział 3 

Ogólne informacje o protokole UDP

	User datagram  protocol w skrócie UDP oznacza protokół komunikacyjny, który jest usługą polegającą na wymianie datagramów między aplikacjami. W skrócie protokół komunikacyjny oznacza „zbiór zasad i norm, których muszą przestrzegać komunikujące się ze sobą obiekty”  .Używany przez niektóre programy w celu uproszczenia przesyłania danych między hostami TCP/IP.  W odróżnieniu od protokołu TCP jest protokołem bezpołączeniowym procesów użytkownika, co oznacza, że komunikaty zostają przekazywane niezależnie. Przykładem trybu bezpołączeniowego jest usługa poczty elektronicznej .Używany w celu szybkiego przesyłania pewnych porcji pakietów danych.  Przed przekazaniem pakietu danych warstwie niższej, dane te są poprzedzone 8 Bajtowym nagłówkiem, który pozwala na określenie w sposób jednoznaczny nadawcy i adresata. Określanie źródła danych odbywa się poprzez unikalne numery portów.  
	Odwołując się do strony internetowej zawierającej tutoriale na temat programowania w różnych językach obiektowych typu C++, C# , informacje o systemach operacyjnych, sprzęcie, znalazłem w dziale poświęconym Internetowi informacje na temat protokołu UDP. Protokół datagramów użytkownika jest protokołem zaimplementowanym w warstwie transportowej modelu OSI. Stosowany do aplikacji typu klient-serwer opartych na sieci IP.  UDP wykorzystywany jest w wideokonferencjach lub grach komputerowych, gdzie dane przesyłane są w czasie rzeczywistym.  Aby osiągnąć większą wydajność, niektóre pakiety nie są dostarczane lub przychodzą w innej kolejności do odbiorcy niż zostały wysłane. 
 
Rys 2 


	Przechodząc do artykułu poświęconemu w większości protokołowi komunikacyjnemu ipv6 znalazł się spory dokument przedstawiający szczegółowe informacje na temat protokołu UDP. User datagram protocol został zdefiniowany tak samo jak TCP w warstwie czwartej (transportowej) modelu OSI   .Widnieje tam definicja mówiąca o tym, że wspomniany protokół jest wersją alternatywną co do TCP oraz w połączeniu z Internet Protocol tworzą UDP/IP.  Podobnie jak TCP, user datagram protocol używa protokołu internetowego w celu pobrania części jaką jest datagram z  jednego urządzenia na drugie. Zobaczmy jak tak naprawdę powstała usługa. Podczas rozwoju wszelkich protokołów , TCP był używany do obsługi funkcji obecnie wykorzystywanych przez IP i TCP.  Protokół był odpowiedzialny za dostarczanie łączności w warstwie sieci, ustanowienie połączenia, kontrolę przepływu danych i w konsekwencji niezawodności działania. W końcu zdano sobie sprawę, że niektóre aplikacje potrzebują mechanizmu kontrolującego dane, a inne nie. Stąd postanowiono stworzyć protokół, który nie będzie dba o to, czy dana paczka dotarła do odbiorcy czy nie.  UDP został zdefiniowany w normie RFC 768 w 1980r. Jest o wiele prostszy od TCP, gdyż nie posiada żadnych mechanizmów poświadczających wiarygodność danych.  Krótko mówiąc jednym z celów protokołu jest służyć jako interfejs pomiędzy procesami aplikacji sieciowych, które działają w wyższy warstwach typu warstwy sieci itd.  .Identyfikacja procesów odbywa się poprzez numer portu.  
	Opierając się na dokumentacji systemu AIX, utworzonej na stronie IBM, znalazłem informacje na temat funkcjonowania i budowy protokołu UDP.  Czasami aplikacja połączona za pomocą sieci chce przesłać pewną wiadomość  do innej aplikacji połączonej z inna siecią. Protokół UDP zapewnia datagramy, służące do nawiązania komunikacji pomiędzy hostami. Wysyłający nie wiedzą, w którym momencie dany proces jest aktywny, więc protokół datagramów użytkownika używa portów protokołu docelowego aby zidentyfikować wartości, potrzebne do przesłania wiadomości jednego lub wielu celów w hoście. Porty odbierają i przytrzymują wiadomości w kolejce dopóki aplikacje w sieci odbiorczej nie odzyskają ich. Ponieważ  UDP opiera się na podstawach funkcjonowania IP w stosunku do wysyłania data gramów, zapewnia on taką samą komunikację jak za pomocą IP pomiędzy dwoma sieciami i punktami dostępu, gdzie wiadomość może być dostarczona. Dzięki temu nie ma gwarancji, że datagramy zostaną dostarczone w tej samej kolejności jakiej zostały wysłane. Jednakże umożliwia użytkownikowi określenie portów źródłowego i docelowego, obliczenie sumy kontrolnej dla danych jak i nagłówka.  Określając porty, zapewniamy, że dane wysyłane z jednej aplikacji do drugiej zostaną dostarczone. 



	Podsumowując pomimo wielu zalet protokołu np. szybkość działania występuje też dużo mechanizmów, których nie jest w stanie zapewnić m.in. jest to:
•	Brak sekwencyjności danych – czyli pierwszy wysłany pakiet z ciągu pakietów może dotrzeć do odbiorcy jako ostatni.
•	Sterowanie przepływem – odbiorca musi być w stanie nadążyć za odbieraniem wszystkich przychodzących pakietów w innym przypadku pakiety zostaną utracone.
•	Potwierdzenia odbioru.
•	Czasu oczekiwania na dane.
•	Ponownej retransmisji.
•	Wykrycia takich samych nadanych pakietów.
